@inject NavigationManager NavigationManager  

@if (!HideTopRow)  
{  
    <div class="top-row bg-white">  
        <div class="container d-flex align-items-center justify-content-between px-0">  
            <div class="logo-container me-auto">  
                <a href="/">  
                    <img class="imgLogo" src="https://scrgajdklzafafwrxrng.supabase.co/storage/v1/object/public/propiedades/ImgProyect/LogoCompleto.png" alt="Infalible Logo" />  
                </a>  
            </div>  
            <input type="checkbox" id="menu-toggle" class="menu-toggle" hidden />  
            <label for="menu-toggle" class="menu-icon d-lg-none">  
                <span></span>  
                <span></span>  
                <span></span>  
            </label>  
            <div class="nav-links ms-auto  ">
                <a href="/propiedad/create" class="btn menu-btn">Nosotros</a>
                <a class="btn menu-btn">Compra</a>  
                <a class="btn menu-btn">Alquila</a>  
                <a class="btn menu-btn">Vende</a>  
                <a class="btn menu-btn">Invierte</a>  
                <a class="btn menu-btn">Forma Parte</a>  
                <a class="btn menu-btn">Cont&aacute;ctanos</a>  
                <div class="dropdown">  
                    <button class="btn btnPerson dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">  
                        <i class="bi bi-person"></i>  
                    </button>  

                    <AuthorizeView>  
                        <Authorized Context="authorizedContext">
                            <div class="dropdown-menu dropDowmHome dropdown-menu-end p-3 mt-2" style="width: 300px;">
                                <small class="text-center">@authorizedContext.User.Identity?.Name</small>  
                                <a class="dropdown-item" href="Account/Manage"><i class="bi bi-person-gear"></i> Perfil</a>  
                                <a class="dropdown-item" href=""><i class="bi bi-bookmark"></i> Guardados</a>  
                                <a class="dropdown-item" href=""><i class="bi bi-cart"></i> Carrito</a>  
                                <AuthorizeView Roles="Admin">  
                                    <Authorized Context="adminContext">
                                        <a class="dropdown-item" href="/Admin/Home">
                                            <i class="bi bi-shield-lock"></i> Administrar  
                                        </a>  
                                    </Authorized>  
                                </AuthorizeView>  
                                <form action="Account/Logout" method="post">  
                                    <AntiforgeryToken />  
                                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />  
                                    <button type="submit" class="dropdown-item">  
                                        <span class="bi bi-arrow-bar-left" aria-hidden="true"></span> Cerrar Sesión  
                                    </button>  
                                </form>  
                            </div>  
                        </Authorized>  

                        <NotAuthorized>  
                            <div class="dropdown-menu dropdown-menu-end p-2 mt-2" style="width: 200px;">  
                                <a class="dropdown-item" href="Account/Login"> <i class="bi bi-arrow-bar-right"></i> Iniciar Sesion</a>  
                                <a class="dropdown-item" href="Account/Register"> <i class="bi bi-person-add"></i> Registrarse</a>  
                            </div>  
                        </NotAuthorized>  
                    </AuthorizeView>  
                </div>  
            </div>  
        </div>  
    </div>  
}  

@code {  
    private bool HideTopRow => NavigationManager.Uri.Contains("/Account/Register", StringComparison.OrdinalIgnoreCase) ||  
        NavigationManager.Uri.Contains("/Account/Login", StringComparison.OrdinalIgnoreCase);  

    private string? currentUrl;  

    protected override void OnInitialized()  
    {  
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);  
        NavigationManager.LocationChanged += OnLocationChanged;  
    }  

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)  
    {  
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);  
        StateHasChanged();  
    }  

    public void Dispose()  
    {  
        NavigationManager.LocationChanged -= OnLocationChanged;  
    }  
}