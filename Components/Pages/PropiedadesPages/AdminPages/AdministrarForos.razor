@page "/admin/administrar-foros"
@attribute [Authorize(Roles = "Admin")]
@layout AdminLayout
@inject ForoService ForoService
@inject IToastService ToastService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Administrar Foros</PageTitle>

<div class="container">
    <div class="d-flex justify-content-between mb-4">
        <h5 class="text-secondary">Administrar Foros</h5>
        <a class="btn btn-success bi bi-plus-lg" href="/admin/foro/create"> Agregar</a>
    </div>

    <div class="row d-flex justify-content-center mb-2">
        <div class="col-md-2">
            <InputSelect class="form-select" @bind-Value="Filtro">
                <option value="Titulo">T&iacute;tulo</option>
                <option value="Descripcion">Descripci&oacute;n</option>
            </InputSelect>
        </div>
        <div class="col-md-5">
            <div class="input-group" role="group">
                <input class="form-control" type="text" placeholder="Buscar..." @bind-value="inputText" @oninput="OnSearchInput" />
                <button class="btn btn-outline-primary" type="button" @onclick="BuscarForos">Buscar</button>
            </div>
        </div>

        <div class="col-md-2">
            <InputDate class="form-control" @bind-Value="Desde" placeholder="Desde" />
        </div>
        <div class="col-md-2">
            <InputDate class="form-control" @bind-Value="Hasta" placeholder="Hasta" />
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3 mt-4">
        <h3 class="form-label"></h3>
        @if (totalResultados > 0)
        {
            <span><strong>@totalResultados</strong> Resultados</span>
        }
    </div>

    @if (forosPaginados is null)
    {
        <div class="d-flex flex-column align-items-center">
            <span class="mb-3 fs-6">Cargando Foros...</span>
            <div>
                <div class="spinner-grow text-primary mx-1" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>
    }
    else if (!forosPaginados.Any())
    {
        <div class="alert alert-info text-center">No se encontraron foros.</div>
    }
    else
    {
        <div class="row">
            @foreach (var foro in forosPaginados)
            {
                <div class="col-12 mb-4 foros-item px-0">
                    <div class="card h-100 shadow-sm">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@foro.ImagenUrl"
                                     class="img-fluid rounded-start h-100"
                                     alt="@foro.Titulo"
                                     style="object-fit: cover; height:100px;">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body d-flex flex-column h-100">
                                    <div class="row d-flex justify-content-between">
                                        <div class="col-md-10">
                                            <h5 class="card-title">@foro.Titulo</h5>
                                        </div>
                                        <div class="col-md-2 text-end">
                                            <p class="card-text fecha-foro text-muted mb-2" style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">
                                                @foro.FechaCreacion.ToString("dd/MM/yyyy")
                                            </p>
                                        </div>
                                    </div>


                                    <p class="card-text text-muted flex-grow-1">
                                        @(foro.Descripcion.Length > 150 ? foro.Descripcion.Substring(0, 150) + "..." : foro.Descripcion)
                                    </p>
                                    <div class="mt-auto d-flex justify-content-between align-items-center">
                                        <a href="@foro.LinkForo" target="_blank" class="btn btn-sm btn-info text-white bi bi-box-arrow-up-right"> Ir al Foro</a>
                                        <div class="btn-group">
                                            <a title="Editar" class="btn btn-sm btn-outline-primary " href="/admin/foro/edit/@foro.ForoId">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button title="Eliminar" class="btn btn-sm btn-outline-danger" @onclick="() => AbrirModalEliminar(foro.ForoId)">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="d-flex justify-content-center">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="javascript:void(0)" @onclick="() => CambiarPagina(currentPage - 1)">Anterior</a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="javascript:void(0)" @onclick="() => CambiarPagina(i)">@i</a>
                        </li>
                    }
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="javascript:void(0)" @onclick="() => CambiarPagina(currentPage + 1)">Siguiente</a>
                    </li>
                </ul>
            </nav>
        </div>
    }
</div>

@if (mostrarModalEliminar)
{
    <div class="modal fade show" style="display: block;" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">Confirmar Eliminación</h5>
                    <button type="button" class="btn-close" @onclick="CerrarModalEliminar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas eliminar este foro? Esta acción no se puede deshacer.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CerrarModalEliminar">Cancelar</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmarEliminar">
                        @if (isEliminando)
                        {
                            <span class="spinner-border spinner-border-sm"></span>
                            <span>Eliminando...</span>
                        }
                        else
                        {
                            <span>Eliminar</span>
                        }
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private string inputText = string.Empty;
    private string Filtro { get; set; } = "Titulo";
    private DateTime? Desde { get; set; } = DateTime.Now.AddMonths(-1);
    private DateTime? Hasta { get; set; } = DateTime.Now;
    private int totalResultados = 0;

    private List<Foros>? forosPaginados;
    private int currentPage = 1;
    private int pageSize = 9;
    private int totalPages = 1;

    private bool mostrarModalEliminar = false;
    private int foroIdAEliminar = 0;
    private bool isEliminando = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarForos();
    }

    private async Task CargarForos()
    {
        forosPaginados = null;
        StateHasChanged();

        var resultado = await ForoService.ListarPaginado(currentPage, pageSize, Filtro, inputText, Desde, Hasta);
        forosPaginados = resultado.foros;
        totalResultados = resultado.TotalCount;
        totalPages = (int)Math.Ceiling(totalResultados / (double)pageSize);
        if (totalPages == 0) totalPages = 1;

        StateHasChanged();
    }

    private async Task OnSearchInput(ChangeEventArgs e)
    {
        inputText = e.Value?.ToString() ?? string.Empty;
        if (string.IsNullOrEmpty(inputText))
        {
            await BuscarForos();
        }
    }

    private async Task BuscarForos()
    {
        currentPage = 1;
        await CargarForos();
    }

    private async Task CambiarPagina(int nuevaPagina)
    {
        if (nuevaPagina < 1 || nuevaPagina > totalPages)
        {
            return;
        }
        currentPage = nuevaPagina;
        await CargarForos();
    }

    private void AbrirModalEliminar(int foroId)
    {
        foroIdAEliminar = foroId;
        mostrarModalEliminar = true;
    }

    private void CerrarModalEliminar()
    {
        mostrarModalEliminar = false;
        foroIdAEliminar = 0;
    }

    private async Task ConfirmarEliminar()
    {
        if (foroIdAEliminar == 0) return;

        isEliminando = true;
        var eliminado = await ForoService.Eliminar(foroIdAEliminar);

        if (eliminado)
        {
            ToastService.ShowSuccess("Foro eliminado correctamente.");
            if (forosPaginados?.Count == 1 && currentPage > 1)
            {
                currentPage--;
            }
            await CargarForos();
        }
        else
        {
            ToastService.ShowError("No se pudo eliminar el foro.");
        }

        isEliminando = false;
        CerrarModalEliminar();
    }
}